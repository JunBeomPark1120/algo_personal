1. 다수의 소수 판별
    - 특정한 수의 범위 안에 존재하는 모든 소수를 찾을 땐 어떻게 할까?
    : 에라토스테네스의 체 알고리즘을 사용함.

2. 에라토스테네스의 체 알고리즘
    - 다수의 자연수에 대해 소수 여부를 판별할 때 사용하는 알고리즘.
    - 에라토스테네스의 체는 N보다 작거나 같은 모든 소수를 찾을 때 사용
    - 에라토스테네스의 체 알고리즘의 구체적인 동작 과정은 다음과 같음
        1) 2부터 N까지의 모든 자연수를 나열함.
        2) 남은 수 중에서 아직 처리하지 않은 가장 작은 수 i를 찾음
        3) 남은 수 중에서 i의 배수를 모두 제거(i는 제거X)
        4) 더 이상 반복할 수 없을 때까지 2번과 3번의 과정을 반복함.
    ex. 동작 예시
    [초기 단계] 2부터 26까지의 모든 자연수를 나열
        2   3   4   5   6
        7   8   9   10  11
        12  13  14  15  16
        17  18  19  20  21
        22  23  24  25  26
    
    [Step1] 아직 처리하지 않은 가장 작은 수 2를 제외한
    2의 배수를 모두 제거
        2   3       5    
        7       9       11
            13      15    
        17      19      21
            23      25    

    [Step2] 아직 처리하지 않은 가장 작은 수 3를 제외한
    3의 배수를 모두 제거
        2   3       5    
        7               11
            13            
        17      19        
            23      25    

    [Step3] 아직 처리하지 않은 가장 작은 수 5를 제외한
    5의 배수를 모두 제거
        2   3       5    
        7               11
            13            
        17      19        
            23            

    [Step4] 마찬가지의 과정을 반복했을 때, 최종적인 결과는 다음과 
        2   3       5    
        7               11
            13            
        17      19        
            23            

3. 에라토스테네스의 체 알고리즘 성능 분석
    - 에라토스테네스의 체 알고리즘의 시간 복잡도는 사실상 선형 시간에 가까울 정도로 매우 빠름.
        - 시간 복잡도는 O(N*log(logN))임.
    - 에라토스테네스의 체 알고리즘은 다수의 소수를 찾아야 하는 문제에서 효과적으로 사용가능
        - 하지만 각 자연수에 대한 소수 여부를 저장해야 하므로 많은 메모리가 필요
        - 10억이 소수인지 아닌지 판별해야 할 때, 에라토스테네스의 체를 사용할 수 있을까?